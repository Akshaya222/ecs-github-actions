name: Stale Pull Request

on:
  workflow_dispatch:
  
jobs:
  stale-pr-reminder:
    runs-on: ubuntu-latest

    steps:
     - name: Generate token
       id: generate_token
       uses: tibdex/github-app-token@v1.8.0
       with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          
     - name: Checkout code
       uses: actions/checkout@v2
       with:
         token: ${{ steps.generate_token.outputs.token }}
         
     - name: Bash Script
       run: |
         GITHUB_OWNER="Akshaya222"
         GITHUB_REPO="ecs-github-actions"
         ACCESS_TOKEN=${{ steps.generate_token.outputs.token }}
         BOT_USERNAME="Bot"
         MINUTES_5_AGO=$(date -u -d "3 minutes ago" +%Y-%m-%dT%H:%M)
         MINUTES_10_AGO=$(date -u -d "6 minutes ago" +%Y-%m-%dT%H:%M)
         MINUTES_15_AGO=$(date -u -d "9 minutes ago" +%Y-%m-%dT%H:%M)
         CURRENT_TIME=$(date -u +"%Y-%m-%dT%H:%M:%S")
         echo "5 minutes ago - ${MINUTES_5_AGO}"
         echo "10 minutes ago - ${MINUTES_10_AGO}"
         echo "15 minutes ago - ${MINUTES_15_AGO}"
         echo "current time - ${CURRENT_TIME}"
         PR_LIST_5_MINUTES=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/pulls?state=open&sort=updated&direction=asc" | jq -r ".[] | select(.updated_at | startswith(\"$MINUTES_5_AGO\")) | .number, .user.type" | grep -B1 -E -v "$BOT_USERNAME" | grep -E "$" | tr '\n' ' ')
         PR_LIST_10_MINUTES=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/pulls?state=open&sort=updated&direction=asc" | jq -r ".[] | select(.updated_at | startswith(\"$MINUTES_10_AGO\")) | .number, .user.type" | grep -B1 -E -v "$BOT_USERNAME" | grep -E "$" | tr '\n' ' ')
         PR_LIST_15_MINUTES=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/pulls?state=open&sort=updated&direction=asc" | jq -r ".[] | select(.updated_at | startswith(\"$MINUTES_15_AGO\")) | .number, .user.type" | grep -B1 -E -v "$BOT_USERNAME" | grep -E "$" | tr '\n' ' ')
         echo "pr list in 5 minutes - ${PR_LIST_5_MINUTES}"
         echo "pr list in 10 minutes - ${PR_LIST_10_MINUTES}"
         echo "pr list in 15 minutes - ${PR_LIST_15_MINUTES}"
         for PR_NUMBER_1 in $PR_LIST_5_MINUTES; do
         COMMENT="Reminder**: This pull request will be closed in 6 minutes if there's no further activity. Please review and provide any necessary updates."
         curl -s -H "Authorization: token $ACCESS_TOKEN" -X POST -d '{"body":"'"$COMMENT"'"}' "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/issues/$PR_NUMBER_1/comments"
         done
         for PR_NUMBER_2 in $PR_LIST_10_MINUTES; do
         COMMENT="Reminder**: This pull request will be closed in 3 minutes if there's no further activity. Please review and provide any necessary updates."
         curl -s -H "Authorization: token $ACCESS_TOKEN" -X POST -d '{"body":"'"$COMMENT"'"}' "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/issues/$PR_NUMBER_2/comments"
         done
         for PR_NUMBER_3 in $PR_LIST_15_MINUTES; do
         COMMENT=" Closing**: closing this pr as it was inactive for more than 9 minutes. Feel free to reopen if needed."
         curl -s -H "Authorization: token $ACCESS_TOKEN" -X POST -d '{"body":"'"$COMMENT"'"}' "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/issues/$PR_NUMBER_3/comments"
         curl -s -H "Authorization: token $ACCESS_TOKEN" -X PATCH -d '{"state": "closed"}' "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/pulls/$PR_NUMBER_3"
         done

         # Fetch open pull requests
         PR_LIST=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/pulls?state=open&sort=updated&direction=asc")

         # Loop through each pull request and pretty-print all fields
         echo "----------------------------------------"
         for PR in $(echo "$PR_LIST" | jq -c '.[]'); do
         echo "Pull Request:"
         echo "$PR" | jq .
         echo "----------------------------------------"
         done

         
         
        
         
         
