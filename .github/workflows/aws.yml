name: Stale Pull Request

on:
  workflow_dispatch:
  
jobs:
  stale-pr-reminder:
    runs-on: ubuntu-latest

    steps:
     - name: Generate token
       id: generate_token
       uses: tibdex/github-app-token@v1.8.0
       with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          
     - name: Checkout code
       uses: actions/checkout@v2
       with:
         token: ${{ steps.generate_token.outputs.token }}
         
     - name: Bash Script
       run: |
         GITHUB_OWNER="Akshaya222"
         GITHUB_REPO="ecs-github-actions"
         ACCESS_TOKEN=${{ steps.generate_token.outputs.token }}
         PR_LIST_2_MINUTES=
         PR_LIST_4_MINUTES=
         PR_LIST_6_MINUTES=
         current_time=$(date +"%Y-%m-%d %H:%M:%S")
         echo "Current Time: $current_time"
         # to fetch open pull requests
         PR_LIST=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/pulls?state=open&direction=asc")
           echo "$PR_LIST" | jq -c '.[]' | while read -r pull_req; do
           PR_NUMBER=$(echo "$pull_req" | jq -r '.number')
           API_URL="https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/pulls/${PR_NUMBER}/commits"
           API_RESPONSE=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "$API_URL")
           SORTED_COMMITS=$(echo "$API_RESPONSE" | jq -c 'sort_by(.commit.author.date) | reverse')
           LATEST_COMMIT_MESSAGE=$(echo "$SORTED_COMMITS" | jq -r '.[0].commit.author.date')
           echo "pull request number is ${PR_NUMBER} and ${LATEST_COMMIT_MESSAGE}"
           [[ "${LATEST_COMMIT_MESSAGE}" = "$(date -u -d '2 minutes ago' +%Y-%m-%dT%H:%M)"* ]] && PR_LIST_2_MINUTES="${PR_NUMBER}"
           [[ "${LATEST_COMMIT_MESSAGE}" = "$(date -u -d '4 minutes ago' +%Y-%m-%dT%H:%M)"* ]] && PR_LIST_4_MINUTES="${PR_NUMBER}"
           [[ "${LATEST_COMMIT_MESSAGE}" = "$(date -u -d '6 minutes ago' +%Y-%m-%dT%H:%M)"* ]] && PR_LIST_6_MINUTES="${PR_NUMBER}"
           echo "2 minutes ${PR_LIST_2_MINUTES}"
           echo "4 minutes ${PR_LIST_4_MINUTES}"
           echo "6 minutes ${PR_LIST_6_MINUTES}"
         done
         for PR_NUMBER_1 in $PR_LIST_2_MINUTES; do
            COMMENT="Reminder**: This pull request will be closed in 4 minutes if there's no further activity. Please review and provide any necessary updates."
            curl -s -H "Authorization: token $ACCESS_TOKEN" -X POST -d '{"body":"'"$COMMENT"'"}' "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/issues/$PR_NUMBER_1/comments"
         done
         for PR_NUMBER_2 in $PR_LIST_4_MINUTES; do
            COMMENT="Reminder**: This pull request will be closed in 2 minutes if there's no further activity. Please review and provide any necessary updates."
            curl -s -H "Authorization: token $ACCESS_TOKEN" -X POST -d '{"body":"'"$COMMENT"'"}' "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/issues/$PR_NUMBER_2/comments"
         done
         for PR_NUMBER_3 in $PR_LIST_6_MINUTES; do
            COMMENT=" Closing**: closing this pr as it was inactive for more than 6 minutes. Feel free to reopen if needed."
            curl -s -H "Authorization: token $ACCESS_TOKEN" -X POST -d '{"body":"'"$COMMENT"'"}' "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/issues/$PR_NUMBER_3/comments"
            curl -s -H "Authorization: token $ACCESS_TOKEN" -X PATCH -d '{"state": "closed"}' "https://api.github.com/repos/$GITHUB_OWNER/$GITHUB_REPO/pulls/$PR_NUMBER_3"
         done
